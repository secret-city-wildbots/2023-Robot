-----------------------------------------------------------

DriveEnd()
# This VI sets the all of the joysticks to zero and permanently halts the drive sequencer.

-----------------------------------------------------------

DriveWaitForTime(param1)
# Pauses the drive sequencer until the specified amount of time has elapsed.

1. Time delay (ms), set to -1 to use the dashboard-configurable value (s).

-----------------------------------------------------------

DriveAutoTarget(param1)
# Sets if robot is in auto targeting or not.

1. Sets if it is on or off("on" or "off").

-----------------------------------------------------------

DriveWaitForManip(param1)
# Pauses the drive sequencer until the manipulator sequencer has reached (or passed) the specified step.

1. Manipulator step to wait for.

-----------------------------------------------------------

DriveWaitForButton()
# Pauses the drive sequencer until the driver presses the "advance system check" button on the joystick.

-----------------------------------------------------------

DriveDistanceX(param1, param2)
# This VI drives the robot in the field-oriented x-direction, note that there is no feedback control loop.

1. The drive distance specified in inches.
2. The signed strafe command, note that the user must match the command sign to the distance sign.

-----------------------------------------------------------
DriveDistanceY(param1, param2)
# This VI drives the robot in the field-oriented y-direction, note that there is no feedback control loop.

1. The drive distance specified in inches.
2. The signed strafe command, note that the user must match the command sign to the distance sign.

-----------------------------------------------------------

DriveAngleH(param1, param2)
# This VI rotates the robot to the specified field-oriented angle.

1. The goal angle specified in degrees on [0,360].
2. The signed rotation command, note that the user must specify the desired rotation direction.

-----------------------------------------------------------

DriveBalance(param1)
# This VI balances the robot from near or far side when lined up

1. "near" or "far" to indicate which side the robot is coming from in relation to the driver station

-----------------------------------------------------------

DriveOver(param1)
# This VI drives the robot over the charge station from near or far side

1. "near" or "far" to indicate which side the robot is coming from in relation to the driver station

-----------------------------------------------------------

DrivePath(param1, param2, param3, param4, param5)
# This VI uses the pure-pursuit algorithm to follow the specified path.

1. The maximum distance error magnitude (in) to allow advancement to the next step.
2. The maximum angle error magnitude (deg) to allow advancement to the next step.
3. The maximum elapsed time (ms) before advancement to the next step, set to -1 to ignore.
4. The name of the path to follow, do not include the .csv extension.
5. Whether we use the given path or need the robot to choose a subpath (normal, robot_suffix).

-----------------------------------------------------------
***********************************************************
-----------------------------------------------------------

ManipEnd()
# This VI sets the all of the joysticks buttons to safe positions and permanently halts the manipulator sequencer.

-----------------------------------------------------------

DriveSetRobotPosition(param1, param2)
# This VI manually updates the robot's position, use to zero-out accumulated pose error. Pass -1 to re-sync with fused pose.

1. The field-oriented x position specified in inches.
2. The field-oriented y position specified in inches.

-----------------------------------------------------------

ManipWaitForTime(param1)
# Pauses the manipulator sequencer until the specified amount of time has elapsed.

1. Time delay (ms), set to -1 to use the dashboard-configurable value (s).

-----------------------------------------------------------

ManipWaitForDrive(param1)
# Pauses the manipulator sequencer until the drive sequencer has reached (or passed) the specified step.

1. Drive step to wait for.

-----------------------------------------------------------

ManipWaitForButton()
# Pauses the manipulator sequencer until the driver presses the "advance system check" button on the joystick.

-----------------------------------------------------------

ManipWaitForDistance(param1, param2)
# Pauses the manipulator sequencer until the robot has driven along a path for a specified distance measured either from the start or the end of the path.

1. If postive this is the distance from start of path (in), if negative this is the distance from the end of the path (in) [-1200,1200].
2. Timeout (ms), or set to -1 to disable.

-----------------------------------------------------------

ManipChangeState(param1)
# This VI changes the robot's master state.

1. Specifies the desired robot master state. -1=dashboard-configurable, 0=stow, 1=balancing, 2=scoring, 3=hoppering, 4=ground, 5=shelf

-----------------------------------------------------------

ManipChangeScoringPosition(param1)
# This VI changes the robot's scoring height

1. Specifies the desired scoring height (-1=dashboard, 0=mid, 1=high)

-----------------------------------------------------------

ManipDropPiece()
# This VI drops a held piece

-----------------------------------------------------------

ManipWaitForTeleOp()
# This VI waits for the robot mode to be TeleOp Enabled

-----------------------------------------------------------

ManipChangePiece(param1)
# This VI changes scoring mode to cube or cone

1. Changes between cube and cone scoring modes ("cube" or "cone")

-----------------------------------------------------------

ManipGroundPickup(param1)
# This VI enters or exits ground pickup mode

1. Turns on or off ground pickup ("on" or "off")

-----------------------------------------------------------

ManipGroundScore()
# This VI scores in the low position (requires state to be stowed(0))

-----------------------------------------------------------

ManipWaitForArm()
# This VI waits until the arm has arrived at its most recently requested state

-----------------------------------------------------------