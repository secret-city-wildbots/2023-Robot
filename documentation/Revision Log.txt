-- Known Issues --
> The robot probably shifts too early, worry less about maintaining motor efficiency and stay in low gear for longer
> Need to run additional checks on the AprilTags pose estimates, they are still marked as valid even when too far away for stable calculation
> Values wired to the default terminal of "NT Get Boolean Array.vi" are not honored
> The ArmKinematicsSimulator.vi has a habit of crashing randomly...

-- Untested Features --
> Linking the game piece detection to the grip solenoid state.
> Actually controlling the arm motors with the code in OutputArm.vi.
> Reading an actual absolute encoder, test calibration behavior.
> Full sensor fusion at BioLargo.
> Initial path following at BioLargo.

-- Releases --

v***
> Cleaning up the gripper state controller.
> Modifying the haptics engine for CHARGED UP.
> Modifying the power management state controller for CHARGED UP.
> Cleaning up the drivebase state controller.
> When balancing, force the robot into low gear.
> Driver can toggle auto-targeting control of the drive base.
> Unless overridden by a force to low gear decision, force to high gear when robot is autonomous.
> Fixes a bug from 2021 that caused the LEDs to enter party mode unexpectadly. 
> Modifying the LED state controller for CHARGED UP.
> Adding a way to zero the pitch angle.
> Adding simulation capability for the robot pitch angle.
> Adding code to read and report the robot pitch angle.
> Adding joint angle constraints (in independent joint space).
> Connects the end effector jogging Dashboard data to the IK algorithm.
> The IK algorithm has been deployed and tested on the robot.

v0.4
> The robot now sends a "code is running" signal to the Dashboard.
> Adds a state controller for the arm.
> Finishes out the functionality for the on-computer arm kinematics simulator.
> Adds arm (and generic motor) simulation code.
> Adds visualization of the goal end effector position to the Dashboard.
> Integrates the arm state controller with the master state controller.
> Receives all arm data and overrides from the Dashboard.
> Arm zeroing and unlocking are now tied to Dashboard controls.
> Adds absolute arm encoder reading and calibration code.
> Sends the absolute arm encoder readings to the Dashboard.
> Adding absolute arm encoder sensors.
> Adds temperature readings and alarms for the arm motors.
> Sends the scoring state to the Dashboard.
> Manipulator buttons have been configured to control the robot master state.
> Sends the gripper state to the Dashboard.
> Merged MVP gripper state controller.
> The driver joystick will now vibrate when the robot is holding a game piece.
> Merged color sensor game piece detection.
> Increases the time threshold before a shifter failure is latched.
> More detailed alarm information is now sent to the Driver Station console when a motor overheats.
> Adds a GRNF for the REV Color Sensor v3.
> Foward Kinematics calculations are complete and integreated with the Feed Forward model for the Shoulder, Elbow, and Wrist motors.
> OutputArm infrastucture is in place to send all control and configuration commands to the Shoulder, Elbow, and Wrist motors.

v0.3
> Adding an Inverse and Forward Kinematics simulation for the arm.
> More detailed error messages are sent when a CAN or power fault occurs.
> Created a dedicated "Robot is Enabled" global variable
> Increasing the amount of disabled time before drive motors go into coast to keep from falling off of the CHARGING STATION.
> Cleaning up the Master State Controller.
> AprilTag pose estimates are now flipped based on alliance color.
> All triggered updates are now sent continuously for the first 5 seconds after their first call.
> Tweaked the set behavior of Auto_Path_Suffix for consistency.
> Fixing a bug in the auto play which is used if no auto plays can be loaded from the RoboRIO.
> Suggested autonomous start locations are sent to the Dashboard.
> Re-writes the auto play parser to support variables and setting the suggested robot start location.
> Automatic insertion of the dashboard delay into all auto plays.
> Robot pose estimation has been updated to work with 2023 AprilTags instead of 2022 retro-reflective targets.
> Cleans up the odometry code and fixes sever critical bugs from 2022.
> Switches to "hybrid" odometry which primarily uses the Falcon position data and only uses velocity projections durring shifting events.